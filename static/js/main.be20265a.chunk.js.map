{"version":3,"sources":["Components/Playground.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Playground","React","useState","fontSizeUnit","setFontSizeUnit","fontSize","setFontSize","fontWeight","setFontWeight","fontStretch","setFontStretch","fontStyle","setFontStyle","color","setColor","backgroundColor","setBackgroundColor","border","setBorder","borderRadiusUnit","setBorderRadiusUnit","borderRadius","setBorderRadius","heightUnit","setHeightUnit","height","setHeight","widthUnit","setWidthUnit","width","setWidth","paddingUnit","setPaddingUnit","padding","setPadding","marginUnit","setMarginUnit","margin","setMargin","className","value","type","onChange","e","target","step","placeholder","min","max","contentEditable","style","App","position","bottom","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be20265a.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Playground() {\n    const [fontSizeUnit, setFontSizeUnit] = React.useState('px');\n    const [fontSize, setFontSize] = React.useState(`32`);\n    const [fontWeight, setFontWeight] = React.useState(400);\n    const [fontStretch, setFontStretch] = React.useState('normal');\n    const [fontStyle, setFontStyle] = React.useState('normal');\n    const [color, setColor] = useState(\"black\");\n    const [backgroundColor, setBackgroundColor] = useState('white');\n\n    const [border, setBorder] = useState('thin solid red');\n    const [borderRadiusUnit, setBorderRadiusUnit] = useState('px');\n    const [borderRadius, setBorderRadius] = useState('4');\n\n    const [heightUnit, setHeightUnit] = useState('px');\n    const [height, setHeight] = useState(100);\n    const [widthUnit, setWidthUnit] = useState('%');\n    const [width, setWidth] = useState(100);\n\n    const [paddingUnit, setPaddingUnit] = useState('em');\n    const [padding, setPadding] = useState('1');\n    const [marginUnit, setMarginUnit] = useState('em');\n    const [margin, setMargin] = useState('1');\n    \n    return (\n        <div>\n\n            <div className={\"controls\"}>\n                <h2>Controls</h2>\n                <div>\n                    <label>font-size: ({fontSize}) <br/>\n                        <input value={fontSize} type=\"range\"\n                               onChange={(e: any) => setFontSize(e.target.value)}\n                               step={.1}\n                        />\n                    </label>\n                    <label>unit: <br/>\n                        <select value={fontSizeUnit}\n                                onChange={(e: any) => setFontSizeUnit(e.target.value)}\n                                placeholder={\"px|em|pt|in|cm|mm|rem\"}>\n                            <option value=\"px\">px</option>\n                            <option value=\"em\">em</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n                <div>\n                    <label>font-weight: ({fontWeight}) <br/>\n                        <input min={100} max={900} value={fontWeight} type=\"range\"\n                               onChange={(e: any) => setFontWeight(e.target.value)}\n                               step={100}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>font-stretch: <br/>\n                        <select value={fontStretch}\n                                onChange={(e: any) => setFontStretch(e.target.value)}>\n                            <option value=\"normal\">normal</option>\n                            <option value=\"ultra-condensed\">ultra-condensed</option>\n                            <option value=\"extra-condensed\">extra-condensed</option>\n                            <option value=\"condensed\">condensed</option>\n                            <option value=\"semi-condensed\">semi-condensed</option>\n                            <option value=\"semi-expanded\">semi-expanded</option>\n                            <option value=\"expanded\">expanded</option>\n                            <option value=\"extra-expanded\">extra-expanded</option>\n                            <option value=\"ultra-expanded\">ultra-expanded</option>\n                        </select>\n                    </label>\n                </div>\n                <div>\n                    <label>font-style: <br/>\n                        <select value={fontStyle}\n                                onChange={(e: any) => setFontStyle(e.target.value)}>\n                            <option value=\"normal\">normal</option>\n                            <option value=\"italic\">italic</option>\n                            <option value=\"oblique\">oblique</option>\n                        </select>\n                    </label>\n                </div>\n                <div>\n                    <label>color: <br/>\n                        <input type=\"color\" value={color}\n                               onChange={(e: any) => setColor(e.target.value)}/>\n                    </label>\n                </div>\n                <div>\n                    <label>background-color: <br/>\n                        <input type=\"color\" value={backgroundColor}\n                               onChange={(e: any) => setBackgroundColor(e.target.value)}/>\n                    </label>\n                </div>\n                <div>\n                    <label>border: <br/>\n                        <input type=\"text\" value={border}\n                               onChange={(e: any) => setBorder(e.target.value)}/>\n                    </label>\n                </div>\n                <div>\n                    <label>border-radius: ({borderRadius}) <br/>\n                        <input value={borderRadius} type=\"range\"\n                               onChange={(e: any) => setBorderRadius(e.target.value)}\n                               step={1} max={100} min={1}\n                        />\n                    </label>\n                    <label>unit: <br/>\n                        <select value={borderRadiusUnit}\n                                onChange={(e: any) => setBorderRadiusUnit(e.target.value)}>\n                            <option value=\"px\">px</option>\n                            <option value=\"%\">%</option>\n                            <option value=\"em\">em</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n                <div>\n                    <label>height: ({height}) <br/>\n                        <input value={height} type=\"range\"\n                               onChange={(e: any) => setHeight(e.target.value)}\n                               step={1} max={10000} min={1}\n                        /> <br/>\n                        <input type={\"number\"} value={height} onChange={(e: any) => setHeight(e.target.value)}/>\n                    </label>\n                    <label>unit: <br/>\n                        <select value={heightUnit}\n                                onChange={(e: any) => setHeightUnit(e.target.value)}>\n                            <option value=\"px\">px</option>\n                            <option value=\"%\">%</option>\n                            <option value=\"em\">em</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n                <div>\n                    <label>width: ({width}) <br/>\n                        <input value={width} type=\"range\"\n                               onChange={(e: any) => setWidth(e.target.value)}\n                               step={1} max={10000} min={1}\n                        /> <br/>\n                        <input type={\"number\"} value={width} onChange={(e: any) => setWidth(e.target.value)}/>\n                    </label>\n                    <label>unit: <br/>\n                        <select value={widthUnit}\n                                onChange={(e: any) => setWidthUnit(e.target.value)}>\n                            <option value=\"px\">px</option>\n                            <option value=\"%\">%</option>\n                            <option value=\"em\">em</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n                <div>\n                    <label>padding: ({padding}) <br/>\n                        <input value={padding} type=\"range\"\n                               onChange={(e: any) => setPadding(e.target.value)}\n                               step={.1}\n                        />\n                    </label>\n                    <label>unit: <br/>\n                        <select value={paddingUnit}\n                                onChange={(e: any) => setPaddingUnit(e.target.value)}>\n                            <option value=\"em\">em</option>\n                            <option value=\"px\">px</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n                <div>\n                    <label>margin: ({margin}) <br/>\n                        <input value={margin} type=\"range\"\n                               onChange={(e: any) => setMargin(e.target.value)}\n                               step={.1}\n                        />\n                    </label>\n                    <label>unit: <br/>\n                        <select value={marginUnit}\n                                onChange={(e: any) => setMarginUnit(e.target.value)}>\n                            <option value=\"em\">em</option>\n                            <option value=\"px\">px</option>\n                            <option value=\"rem\">rem</option>\n                            <option value=\"in\">in</option>\n                            <option value=\"cm\">cm</option>\n                            <option value=\"mm\">mm</option>\n                            <option value=\"pt\">pt</option>\n                        </select>\n                    </label>\n                </div>\n\n            </div>\n            <div className={\"playground\"}>\n                <h1>Playground</h1>\n\n\n                <div className={\"debug\"}>\n                    font-size: {fontSize}{fontSizeUnit};<br/>\n                    font-weight: {fontWeight};<br/>\n                    font-stretch: {fontStretch};<br/>\n                    font-style: {fontStyle};<br/>\n                    color: {color};<br/>\n                    background-color: {backgroundColor};<br/>\n                    border: {border};<br/>\n                    border-radius: {borderRadius}{borderRadiusUnit};<br/>\n                    height: {height}{heightUnit};<br/>\n                    width: {width}{widthUnit};<br/>\n                    padding: {padding}{paddingUnit};<br/>\n                    margin: {margin}{marginUnit};<br/>\n                </div>\n\n                <div className={\"text\"}>\n                    <div contentEditable className={\"editable\"}\n                         style={{\n                             fontSize: `${fontSize}${fontSizeUnit}`,\n                             fontWeight: fontWeight,\n                             fontStretch: `${fontStretch}`,\n                             fontStyle: `${fontStyle}`,\n                             color: color,\n                             backgroundColor: backgroundColor,\n                             border: border,\n                             borderRadius: `${borderRadius}${borderRadiusUnit}`,\n                             height: `${height}${heightUnit}`,\n                             width: `${width}${widthUnit}`,\n                             padding: `${padding}${paddingUnit}`,\n                             margin: `${margin}${marginUnit}`,\n                         }}>\n                        Get started! Edit me!\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport Playground from \"./Components/Playground\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <label style={{border: \" thin solid grey\", borderRadius: \"7px\", position: \"fixed\", bottom: 0, right: 0, padding: \".4em\", margin: \".3em\"}}>v0.1.0</label>\n            <Playground/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}